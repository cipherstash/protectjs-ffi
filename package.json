{
  "name": "@cipherstash/protect-ffi",
  "version": "0.17.1-11",
  "description": "",
  "main": "./lib/index.cjs",
  "scripts": {
    "test": "npm run test:typecheck && npm run test:lint && npm run test:format && npm run test:rust",
    "test:typecheck": "tsc",
    "test:rust": "cargo test",
    "test:lint": "npm run test:lint:ts",
    "test:lint:ts": "biome lint",
    "test:format": "npm run test:format:ts",
    "test:format:ts": "biome format",
    "test:format:rust": "cargo fmt --check",
    "cargo-build": "tsc &&cargo build --message-format=json-render-diagnostics > cargo.log",
    "cross-build": "tsc &&cross build --message-format=json-render-diagnostics > cross.log",
    "postcargo-build": "neon dist < cargo.log",
    "postcross-build": "neon dist -m /target < cross.log",
    "debug": "npm run cargo-build --",
    "build": "npm run cargo-build -- --release",
    "cross": "npm run cross-build -- --release",
    "prepack": "tsc &&neon update",
    "version": "neon bump --binaries platforms && git add .",
    "release": "gh workflow run release.yml -f dryrun=false -f version=patch",
    "dryrun": "gh workflow run publish.yml -f dryrun=true"
  },
  "author": "",
  "license": "ISC",
  "exports": {
    ".": {
      "import": {
        "types": "./lib/index.d.mts",
        "default": "./lib/index.mjs"
      },
      "require": {
        "types": "./lib/index.d.cts",
        "default": "./lib/index.cjs"
      }
    }
  },
  "types": "./lib/index.d.cts",
  "files": [
    "lib/**/*.?({c,m}){t,j}s"
  ],
  "neon": {
    "type": "library",
    "org": "@cipherstash",
    "platforms": [
      "darwin-x64",
      "darwin-arm64",
      "win32-x64-msvc",
      "linux-x64-gnu",
      "linux-arm64-gnu",
      "linux-x64-musl"
    ],
    "load": "./src/load.cts",
    "prefix": "protect-ffi-"
  },
  "devDependencies": {
    "@biomejs/biome": "1.9.4",
    "@neon-rs/cli": "^0.1.82",
    "@tsconfig/node20": "^20.1.4",
    "@types/node": "^20.11.16",
    "typescript": "^5.3.3"
  },
  "dependencies": {
    "@neon-rs/load": "^0.1.82"
  }
}
